{{/* Configuration begins */}}
  {{$adminRoles := cslice 0 1 2 3 4 5 6 7 8 9}}
  {{$modRoles := cslice 901650145412784149}}
  {{$mentionRoles := cslice 892841938431135884 5}}

  {{$emojis := sdict
    "AdminOnly" ""
    "CancelClose" ""
    "Close" ""
    "ConfirmClose" ""
    "Delete" ""
    "Info" ""
    "Open" ""
    "ReOpen" ""
    "Transcript" ""
  }}

  {{$status := sdict
    "Open" ""
    "Closed" "closed!"
    "Solving" "solving12345"
  }}

  {{$ids := sdict
    "TicketCategory" 0
    "MasterChannel" 0
    "OpenChannel" 0
    "OpenMessage" 0
  }}

  {{$ccs := sdict}}

  {{$inactive := 86400}}
{{/* Configuration ends */}}


{{/* DO NOT EDIT BEYOND THIS POINT */}}

{{$err := ""}}
{{$gRoles := dict}}{{range .Guild.Roles}}{{$gRoles.Set .ID (eq .ID $.Guild.ID|or .Managed|not)}}{{end}}

{{/* Check that all admin/mod/mention roles are valid */}}
{{range $t, $v := sdict "admin" $adminRoles "mod" $modRoles "mention" $mentionRoles}}
  {{- if le (len $v) 10}}{{range $v}}
    {{- if not ($gRoles.Get .)}}{{$err = printf "%s\nInvalid %s role: %d" $err $t .}}{{end}}
  {{- else}}
    {{- if ne $t "mention"}}{{$err = printf "%s\nNo %s roles defined (needs at least 1)" $err $t}}{{end}}
  {{- end}}{{else}}{{$err = printf "%s\nToo many %s roles defined (%d, max 10)" $err $t (len $v)}}{{end}}
{{- end}}

{{range $t, $v := $emojis}}
  {{- if not $v}}{{$err = print $err "\nNo " $t " emoji provided"}}
  {{- else if not (reFind `^(((a:)?[\w~]{2,32}:\d{17,19})|[\x{1f1e6}-\x{1f1ff}]{2}|\p{So}\x{fe0f}?[\x{1f3fb}-\x{1f3ff}]?(\x{200D}\p{So}\x{fe0f}?[\x{1f3fb}-\x{1f3ff}]?)*|[#\d*]\x{FE0F}?\x{20E3})$` $v)}}{{$err = print $err "\nInvalid " $t " emoji provided"}}{{end}}
{{- end}}

{{range $t, $v := $status}}
  {{- if not $v}}{{$err = print $err "\nNo " $t " status name provided"}}
  {{- else if reFind `[^\w-]` $v}}{{$err = print $err "\nInvalid character in " $t " status name"}}
  {{- else if gt (len $v) 10}}{{$err = print $err "\n" $t " status name too long (max 10 chars)"}}{{end}}
{{- end}}

{{range $t, $v := $ids}}{{if not $v}}{{$err = print $err "\nNo " $t " ID provided"}}{{end}}{{end}}
{{if not (getMessage $ids.OpenChannel $ids.OpenMessage)}}{{$err = printf "%s\nDid not find open message (ID %d in channel <#%d>)" $err $ids.OpenMessage $ids.OpenChannel}}{{end}}


{{$tmp := printf "```admin: %v\nmod: %v\nmention: %v\nemojis: %+v\nstatus: %+v\nids: %+v\nccs: %+v\ndelay: %d```" $adminRoles $modRoles $mentionRoles $emojis $status $ids $ccs $inactive}}

{{if $err}}
  {{print "```" $err "```" $tmp}}
{{else}}
  {{$tmp}}
{{end}}
